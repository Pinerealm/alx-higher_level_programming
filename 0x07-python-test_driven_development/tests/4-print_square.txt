This tests the ``print_square`` function in the ``4-print_square`` module.

Normal cases
============
>>> print_square = __import__('4-print_square').print_square
>>> print_square(4)
####
####
####
####

>>> print_square(2)
##
##

>>> print_square(0)



Raises TypeError exceptions
===========================
** If ``size`` is not an integer
-------------------------------
>>> print_square(2.0)
Traceback (most recent call last):
..........
TypeError: size must be an integer

>>> print_square("2")
Traceback (most recent call last):
..........
TypeError: size must be an integer

** If ``size`` is a float and is less than 0
-------------------------------------------
>>> print_square(-2.0)
Traceback (most recent call last):
..........
TypeError: size must be an integer

** If size is not passed
------------------------
>>> print_square()
Traceback (most recent call last):
..........
TypeError: print_square() missing 1 required positional argument: 'size'



Raises ValueError exceptions
============================
** If ``size`` is less than 0
----------------------------
>>> print_square(-2)
Traceback (most recent call last):
..........
ValueError: size must be >= 0
