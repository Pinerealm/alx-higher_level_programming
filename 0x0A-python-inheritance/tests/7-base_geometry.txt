Doctests for the ``integer_validator`` method of the ``BaseGeometry`` class

Normal cases
============
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)


Raises TypeError exceptions
===========================
** If the value is not an integer
---------------------------------
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
..........
TypeError: name must be an integer

>>> bg.integer_validator("age", 89.5)
Traceback (most recent call last):
..........
TypeError: age must be an integer

>>> bg.integer_validator("width", True)
Traceback (most recent call last):
..........
TypeError: width must be an integer

** if only one or no argument is passed
---------------------------------
>>> bg.integer_validator("age")
Traceback (most recent call last):
..........
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator()
Traceback (most recent call last):
..........
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


Raises ValueError exceptions
============================
>>> bg.integer_validator("age", -89)
Traceback (most recent call last):
..........
ValueError: age must be greater than 0

>>> bg.integer_validator("height", 0)
Traceback (most recent call last):
..........
ValueError: height must be greater than 0
